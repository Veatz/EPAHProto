{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  prevStep,\n  handleSubmit,\n  loading\n}) => {\n  const handleFileChange = (e, field) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFormData(prevData => ({\n        ...prevData,\n        files: {\n          ...prevData.files,\n          [field]: {\n            file\n          } // Only store the file initially\n        }\n      }));\n    }\n  };\n  const removeFile = field => {\n    setFormData(prevData => {\n      const updatedFiles = {\n        ...prevData.files\n      };\n      delete updatedFiles[field]; // Remove the file and its subfields\n      return {\n        ...prevData,\n        files: updatedFiles\n      };\n    });\n  };\n  const sections = {\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\n    \"Additional Registration/Accreditations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\", \"philGeps\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"]\n  };\n  const labels = {\n    rctResolution: \"RCT Resolution\",\n    dti: \"Department of Trade and Industry (DTI)\",\n    sec: \"Securities and Exchange Commission (SEC)\",\n    cda: \"Cooperative Development Authority (CDA)\",\n    csoNpoNgoPo: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Civil Society Organization (CSO) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }, this), \"Non-Government Organization (NGO) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }, this), \"People's Organization (PO)\"]\n    }, void 0, true),\n    doleRule1020: \"Department of Labor and Employment (DOLE) Registration under Rule 1020\",\n    bankBook: \"Bank Book / Books of Account\",\n    auditedFinancialStatement: \"Updated / Audited Financial Statement\",\n    latestITR: \"Latest Income Tax Return (ITR)\",\n    salesInvoice: \"Sales Invoice\",\n    businessPermit: \"Business Permit (Mayor's Permit)\",\n    ffeDis: \"Farmers and Fisherfolk Enterprise Development Information System (FFEDIS)\",\n    birRegistration: \"BIR Registration\",\n    philGeps: \"Philippine Government Electronic Procurement (PhilGEPS)\",\n    rsbsa: \"Registry System for Basic Sectors in Agriculture (RSBSA)\",\n    fishAr: \"Fisherfolk Registration (FISH-AR)\",\n    fda: \"Food and Drug Administration (FDA)\",\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries Organizations\",\n    farmersAssociation: \"Farmer's Association\",\n    irrigatorsAssociation: \"Irrigators Association\",\n    laborUnionsWorkersAssoc: \"Labor Unions and Workers' Association\",\n    slpa: \"Sustainable Livelihood Program Associations\"\n  };\n  const subFieldLabels = {\n    territorialScope: \"Territorial Scope\",\n    dateOfIssuance: \"Date of Issuance\",\n    dateOfValidity: \"Date of Validity\",\n    typeOfRegistration: \"Type of Registration\",\n    registryNo: \"Registry Number\",\n    typeOfCooperative: \"Type of Cooperative\",\n    agencyIssuer: \"Agency Issuer\",\n    year: \"Year\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 4: Legal Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), Object.keys(sections).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-table\",\n        children: sections[section].map(field => {\n          var _formData$files$field;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-title-row\",\n              children: labels[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf,.jpg,.jpeg,.png\",\n                  onChange: e => handleFileChange(e, field),\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), ((_formData$files$field = formData.files[field]) === null || _formData$files$field === void 0 ? void 0 : _formData$files$field.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: Object.keys(formData.files[field]).map(subField => {\n                  if (subField === \"file\") return null; // Skip file field\n\n                  let inputType = \"text\"; // Default input type\n                  if (subField.includes(\"date\")) inputType = \"date\"; // Date fields\n                  else if (subField.includes(\"year\") || subField.includes(\"registryNo\")) inputType = \"number\"; // Number fields\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"subfield-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"subfield-label\",\n                      children: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: inputType,\n                      className: \"subfield-input\",\n                      placeholder: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim(),\n                      value: formData.files[field][subField],\n                      onChange: e => handleInputChange(e, field, subField)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 29\n                    }, this)]\n                  }, subField, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadStep","formData","setFormData","prevStep","handleSubmit","loading","handleFileChange","e","field","file","target","files","prevData","removeFile","updatedFiles","sections","labels","rctResolution","dti","sec","cda","csoNpoNgoPo","children","fileName","_jsxFileName","lineNumber","columnNumber","doleRule1020","bankBook","auditedFinancialStatement","latestITR","salesInvoice","businessPermit","ffeDis","birRegistration","philGeps","rsbsa","fishAr","fda","agrarianReformBeneficiaries","farmersAssociation","irrigatorsAssociation","laborUnionsWorkersAssoc","slpa","subFieldLabels","territorialScope","dateOfIssuance","dateOfValidity","typeOfRegistration","registryNo","typeOfCooperative","agencyIssuer","year","className","Object","keys","map","section","_formData$files$field","type","accept","onChange","subField","inputType","includes","replace","trim","placeholder","value","handleInputChange","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst FileUploadStep = ({ formData, setFormData, prevStep, handleSubmit, loading }) => {\r\n  const handleFileChange = (e, field) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        files: {\r\n          ...prevData.files,\r\n          [field]: { file }, // Only store the file initially\r\n        },\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const removeFile = (field) => {\r\n    setFormData((prevData) => {\r\n      const updatedFiles = { ...prevData.files };\r\n      delete updatedFiles[field]; // Remove the file and its subfields\r\n      return { ...prevData, files: updatedFiles };\r\n    });\r\n  };\r\n\r\n  const sections = {\r\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\r\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\r\n    \"Additional Registration/Accreditations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\",\"philGeps\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"],\r\n  };\r\n\r\n  const labels = {\r\n    rctResolution: \"RCT Resolution\",\r\n    dti: \"Department of Trade and Industry (DTI)\",\r\n    sec: \"Securities and Exchange Commission (SEC)\",\r\n    cda: \"Cooperative Development Authority (CDA)\",\r\n    csoNpoNgoPo: (\r\n      <>\r\n        Civil Society Organization (CSO) <br />\r\n        Non-Government Organization (NGO) <br />\r\n        People's Organization (PO)\r\n      </>\r\n    ),\r\n    doleRule1020: \"Department of Labor and Employment (DOLE) Registration under Rule 1020\",\r\n    bankBook: \"Bank Book / Books of Account\",\r\n    auditedFinancialStatement: \"Updated / Audited Financial Statement\",\r\n    latestITR: \"Latest Income Tax Return (ITR)\",\r\n    salesInvoice: \"Sales Invoice\",\r\n    businessPermit: \"Business Permit (Mayor's Permit)\",\r\n    ffeDis: \"Farmers and Fisherfolk Enterprise Development Information System (FFEDIS)\",\r\n    birRegistration: \"BIR Registration\",\r\n    philGeps: \"Philippine Government Electronic Procurement (PhilGEPS)\",\r\n    rsbsa: \"Registry System for Basic Sectors in Agriculture (RSBSA)\",\r\n    fishAr: \"Fisherfolk Registration (FISH-AR)\",\r\n    fda: \"Food and Drug Administration (FDA)\",\r\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries Organizations\",\r\n    farmersAssociation: \"Farmer's Association\",\r\n    irrigatorsAssociation: \"Irrigators Association\",\r\n    laborUnionsWorkersAssoc: \"Labor Unions and Workers' Association\",\r\n    slpa: \"Sustainable Livelihood Program Associations\",\r\n  };\r\n\r\n  const subFieldLabels = {\r\n    territorialScope: \"Territorial Scope\",\r\n    dateOfIssuance: \"Date of Issuance\",\r\n    dateOfValidity: \"Date of Validity\",\r\n    typeOfRegistration: \"Type of Registration\",\r\n    registryNo: \"Registry Number\",\r\n    typeOfCooperative: \"Type of Cooperative\",\r\n    agencyIssuer: \"Agency Issuer\",\r\n    year: \"Year\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2>Step 4: Legal Documents</h2>\r\n      {Object.keys(sections).map((section) => (\r\n        <div key={section} className=\"form-section\">\r\n          <h3 className=\"section-title\">{section}</h3>\r\n          <div className=\"form-table\">\r\n            {sections[section].map((field) => (\r\n              <div key={field} className=\"form-row\">\r\n                <div className=\"form-title-row\">{labels[field]}</div>\r\n                <div className=\"form-inputs\">\r\n                <div className=\"file-upload-container\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".pdf,.jpg,.jpeg,.png\"\r\n                  onChange={(e) => handleFileChange(e, field)}\r\n                  className=\"file-input\"\r\n                />\r\n                </div>\r\n                {formData.files[field]?.file && (\r\n                    <div className=\"form-field\">\r\n                      {Object.keys(formData.files[field]).map((subField) => {\r\n                        if (subField === \"file\") return null; // Skip file field\r\n\r\n                        let inputType = \"text\"; // Default input type\r\n                        if (subField.includes(\"date\")) inputType = \"date\"; // Date fields\r\n                        else if (subField.includes(\"year\") || subField.includes(\"registryNo\")) inputType = \"number\"; // Number fields\r\n\r\n                        return (\r\n                          <div key={subField} className=\"subfield-container\">\r\n                            <label className=\"subfield-label\">\r\n                              {subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                            </label>\r\n                            <input\r\n                              type={inputType}\r\n                              className=\"subfield-input\"\r\n                              placeholder={subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                              value={formData.files[field][subField]}\r\n                              onChange={(e) => handleInputChange(e, field, subField)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}