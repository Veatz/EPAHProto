{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  errors\n}) => {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\n\n  const handleFileChange = (e, field) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!allowedTypes.includes(file.type)) {\n      alert(\"Only PDF, JPG, and PNG files are allowed.\");\n      return;\n    }\n    if (file.size > maxFileSize) {\n      alert(\"File size must be less than 5MB.\");\n      return;\n    }\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          file,\n          previewURL: URL.createObjectURL(file)\n        }\n      }\n    }));\n  };\n  const removeFile = field => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          file: null,\n          previewURL: null\n        }\n      }\n    }));\n  };\n  const getInputType = subField => {\n    const typeMapping = {\n      dateOfIssuance: \"date\",\n      dateOfValidity: \"date\",\n      year: \"number\",\n      registryNo: \"number\"\n    };\n    return typeMapping[subField] || \"text\"; // Default to text\n  };\n  const handleInputChange = (e, field, subField) => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          [subField]: e.target.value\n        }\n      }\n    }));\n  };\n  const sections = {\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\n    \"Additional Registration/Accreditations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\", \"philGeps\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"]\n  };\n  const labels = {\n    rctResolution: \"RCT Resolution\",\n    dti: \"Department of Trade and Industry (DTI)\",\n    sec: \"Securities and Exchange Commission (SEC)\",\n    cda: \"Cooperative Development Authority (CDA)\",\n    csoNpoNgoPo: \"CSO / NGO / PO Registration\",\n    doleRule1020: \"DOLE Rule 1020 Registration\",\n    bankBook: \"Bank Book\",\n    auditedFinancialStatement: \"Audited Financial Statement\",\n    latestITR: \"Latest ITR\",\n    salesInvoice: \"Sales Invoice\",\n    businessPermit: \"Business Permit\",\n    ffeDis: \"FFEDIS Registration\",\n    birRegistration: \"BIR Registration\",\n    philGeps: \"PhilGEPS Registration\",\n    rsbsa: \"RSBSA Registration\",\n    fishAr: \"FISH-AR Registration\",\n    fda: \"FDA Registration\",\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries\",\n    farmersAssociation: \"Farmers Association\",\n    irrigatorsAssociation: \"Irrigators Association\",\n    laborUnionsWorkersAssoc: \"Labor Unions Workers Association\",\n    slpa: \"SLPA Registration\"\n  };\n  const subFieldLabels = {\n    territorialScope: \"Territorial Scope\",\n    dateOfIssuance: \"Date of Issuance\",\n    dateOfValidity: \"Date of Validity\",\n    typeOfRegistration: \"Type of Registration\",\n    registryNo: \"Registry Number\",\n    typeOfCooperative: \"Type of Cooperative\",\n    agencyIssuer: \"Agency Issuer\",\n    year: \"Year\"\n  };\n  const handleUpload = async () => {\n    const uploadFormData = new FormData();\n    Object.keys(formData.files).forEach(key => {\n      var _formData$files$key;\n      if ((_formData$files$key = formData.files[key]) !== null && _formData$files$key !== void 0 && _formData$files$key.file) {\n        uploadFormData.append(key, formData.files[key].file);\n      }\n    });\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", uploadFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      alert(\"Files uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(\"Upload failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 4: Legal Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), Object.keys(sections).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-table\",\n        children: sections[section].map(field => {\n          var _formData$files$field, _formData$files$field2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-title-row\",\n              children: labels[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-container\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf,.jpg,.jpeg,.png\",\n                  onChange: e => handleFileChange(e, field),\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), ((_formData$files$field = formData.files[field]) === null || _formData$files$field === void 0 ? void 0 : _formData$files$field.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [Object.keys(formData.files[field]).map(subField => {\n                  if (subField === \"file\" || subField === \"previewURL\") return null; // Skip file field\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"subfield-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"subfield-label\",\n                      children: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: getInputType(subField),\n                      className: \"subfield-input\",\n                      placeholder: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim(),\n                      value: formData.files[field][subField],\n                      onChange: e => handleInputChange(e, field, subField)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 29\n                    }, this)]\n                  }, subField, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    href: (_formData$files$field2 = formData.files[field]) === null || _formData$files$field2 === void 0 ? void 0 : _formData$files$field2.previewURL,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"Preview File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeFile(field),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), errors[field] && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-text\",\n                children: errors[field]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleUpload,\n      disabled: uploadProgress > 0 && uploadProgress < 100,\n      children: uploadProgress > 0 && uploadProgress < 100 ? `Uploading... ${uploadProgress}%` : \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadStep, \"bmquC9tpPqL001G3ZfJRUW/GSHc=\");\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUploadStep","formData","setFormData","errors","_s","uploadProgress","setUploadProgress","allowedTypes","maxFileSize","handleFileChange","e","field","file","target","files","includes","type","alert","size","prevData","previewURL","URL","createObjectURL","removeFile","getInputType","subField","typeMapping","dateOfIssuance","dateOfValidity","year","registryNo","handleInputChange","value","sections","labels","rctResolution","dti","sec","cda","csoNpoNgoPo","doleRule1020","bankBook","auditedFinancialStatement","latestITR","salesInvoice","businessPermit","ffeDis","birRegistration","philGeps","rsbsa","fishAr","fda","agrarianReformBeneficiaries","farmersAssociation","irrigatorsAssociation","laborUnionsWorkersAssoc","slpa","subFieldLabels","territorialScope","typeOfRegistration","typeOfCooperative","agencyIssuer","handleUpload","uploadFormData","FormData","Object","keys","forEach","key","_formData$files$key","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","section","_formData$files$field","_formData$files$field2","accept","onChange","replace","trim","placeholder","href","rel","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FileUploadStep = ({ formData, setFormData, errors }) => {\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\r\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\r\n\r\n  const handleFileChange = (e, field) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!allowedTypes.includes(file.type)) {\r\n      alert(\"Only PDF, JPG, and PNG files are allowed.\");\r\n      return;\r\n    }\r\n\r\n    if (file.size > maxFileSize) {\r\n      alert(\"File size must be less than 5MB.\");\r\n      return;\r\n    }\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], file, previewURL: URL.createObjectURL(file) },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const removeFile = (field) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { file: null, previewURL: null },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const getInputType = (subField) => {\r\n    const typeMapping = {\r\n      dateOfIssuance: \"date\",\r\n      dateOfValidity: \"date\",\r\n      year: \"number\",\r\n      registryNo: \"number\",\r\n    };\r\n    return typeMapping[subField] || \"text\"; // Default to text\r\n  };\r\n\r\n  const handleInputChange = (e, field, subField) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], [subField]: e.target.value },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const sections = {\r\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\r\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\r\n    \"Additional Registration/Accreditations\": [\r\n      \"businessPermit\", \"ffeDis\", \"birRegistration\", \"philGeps\", \"rsbsa\", \r\n      \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\",\r\n      \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"\r\n    ],\r\n  };\r\n\r\n  const labels = {\r\n    rctResolution: \"RCT Resolution\",\r\n    dti: \"Department of Trade and Industry (DTI)\",\r\n    sec: \"Securities and Exchange Commission (SEC)\",\r\n    cda: \"Cooperative Development Authority (CDA)\",\r\n    csoNpoNgoPo: \"CSO / NGO / PO Registration\",\r\n    doleRule1020: \"DOLE Rule 1020 Registration\",\r\n    bankBook: \"Bank Book\",\r\n    auditedFinancialStatement: \"Audited Financial Statement\",\r\n    latestITR: \"Latest ITR\",\r\n    salesInvoice: \"Sales Invoice\",\r\n    businessPermit: \"Business Permit\",\r\n    ffeDis: \"FFEDIS Registration\",\r\n    birRegistration: \"BIR Registration\",\r\n    philGeps: \"PhilGEPS Registration\",\r\n    rsbsa: \"RSBSA Registration\",\r\n    fishAr: \"FISH-AR Registration\",\r\n    fda: \"FDA Registration\",\r\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries\",\r\n    farmersAssociation: \"Farmers Association\",\r\n    irrigatorsAssociation: \"Irrigators Association\",\r\n    laborUnionsWorkersAssoc: \"Labor Unions Workers Association\",\r\n    slpa: \"SLPA Registration\",\r\n  };\r\n\r\n  const subFieldLabels = {\r\n    territorialScope: \"Territorial Scope\",\r\n    dateOfIssuance: \"Date of Issuance\",\r\n    dateOfValidity: \"Date of Validity\",\r\n    typeOfRegistration: \"Type of Registration\",\r\n    registryNo: \"Registry Number\",\r\n    typeOfCooperative: \"Type of Cooperative\",\r\n    agencyIssuer: \"Agency Issuer\",\r\n    year: \"Year\",\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const uploadFormData = new FormData();\r\n    Object.keys(formData.files).forEach((key) => {\r\n      if (formData.files[key]?.file) {\r\n        uploadFormData.append(key, formData.files[key].file);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/upload\", uploadFormData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n        },\r\n      });\r\n      alert(\"Files uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n      alert(\"Upload failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2>Step 4: Legal Documents</h2>\r\n      {Object.keys(sections).map((section) => (\r\n        <div key={section} className=\"form-section\">\r\n          <h3 className=\"section-title\">{section}</h3>\r\n          <div className=\"form-table\">\r\n            {sections[section].map((field) => (\r\n              <div key={field} className=\"form-row\">\r\n                <div className=\"form-title-row\">{labels[field]}</div>\r\n                <div className=\"form-inputs\">\r\n                  <div className=\"file-upload-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.jpg,.jpeg,.png\"\r\n                      onChange={(e) => handleFileChange(e, field)}\r\n                      className=\"file-input\"\r\n                    />\r\n                  </div>\r\n\r\n                  {formData.files[field]?.file && (\r\n                    <div className=\"form-field\">\r\n                      {Object.keys(formData.files[field]).map((subField) => {\r\n                        if (subField === \"file\" || subField === \"previewURL\") return null; // Skip file field\r\n\r\n                        return (\r\n                          <div key={subField} className=\"subfield-container\">\r\n                            <label className=\"subfield-label\">\r\n                              {subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                            </label>\r\n                            <input\r\n                              type={getInputType(subField)}\r\n                              className=\"subfield-input\"\r\n                              placeholder={subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                              value={formData.files[field][subField]}\r\n                              onChange={(e) => handleInputChange(e, field, subField)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                      <div className=\"file-actions\">\r\n                        <a href={formData.files[field]?.previewURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          Preview File\r\n                        </a>\r\n                        <button type=\"button\" onClick={() => removeFile(field)}>Remove</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {errors[field] && <p className=\"error-text\">{errors[field]}</p>}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <button type=\"button\" onClick={handleUpload} disabled={uploadProgress > 0 && uploadProgress < 100}>\r\n        {uploadProgress > 0 && uploadProgress < 100 ? `Uploading... ${uploadProgress}%` : \"Upload Files\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}