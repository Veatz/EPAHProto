{"ast":null,"code":"const BASE_URL = \"http://localhost:4000/api\";\n\n// Register a new CBO (POST)\nexport const registerCBO = async formData => {\n  try {\n    console.log(\"Sending API request with:\", JSON.stringify(formData, null, 2));\n    const response = await fetch(`${BASE_URL}/cbos`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"API Response Error:\", response.status, errorText);\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\n    }\n    const data = await response.json();\n    console.log(\"API Response Data:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error in API call:\", error);\n    throw error;\n  }\n};\n\n// Get all CBOs (GET)\nexport const getCBOs = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/cbos`, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    if (!response.ok) throw new Error(\"Failed to fetch CBOs\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching CBOs:\", error);\n    throw error;\n  }\n};\n\n// Get a single CBO by ID (GET)\nexport const getCBO = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    if (!response.ok) throw new Error(\"CBO not found\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching CBO:\", error);\n    throw error;\n  }\n};\n\n// Update a CBO (PATCH)\nexport const updateCBO = async (id, updateData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(updateData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"API Response Error:\", response.status, errorText);\n      throw new Error(`Failed to update CBO: ${response.status} - ${errorText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error updating CBO:\", error);\n    throw error;\n  }\n};\n\n// Delete a CBO (DELETE)\nexport const deleteCBO = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    if (!response.ok) throw new Error(\"Failed to delete CBO\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error deleting CBO:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","registerCBO","formData","console","log","JSON","stringify","response","fetch","method","headers","localStorage","getItem","body","ok","errorText","text","error","status","Error","data","json","getCBOs","getCBO","id","updateCBO","updateData","deleteCBO"],"sources":["C:/Users/User/Desktop/EPAHProto/frontend/src/utils/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:4000/api\";\r\n\r\n// Register a new CBO (POST)\r\nexport const registerCBO = async (formData) => {\r\n  try {\r\n    console.log(\"Sending API request with:\", JSON.stringify(formData, null, 2));\r\n\r\n    const response = await fetch(`${BASE_URL}/cbos`, {\r\n      method: \"POST\",\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error(\"API Response Error:\", response.status, errorText);\r\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"API Response Data:\", data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error in API call:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get all CBOs (GET)\r\nexport const getCBOs = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/cbos`, {\r\n      headers: {\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    if (!response.ok) throw new Error(\"Failed to fetch CBOs\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching CBOs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a single CBO by ID (GET)\r\nexport const getCBO = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, {\r\n      headers: {\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    if (!response.ok) throw new Error(\"CBO not found\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching CBO:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update a CBO (PATCH)\r\nexport const updateCBO = async (id, updateData) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify(updateData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error(\"API Response Error:\", response.status, errorText);\r\n      throw new Error(`Failed to update CBO: ${response.status} - ${errorText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error updating CBO:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a CBO (DELETE)\r\nexport const deleteCBO = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/cbos/${id}`, { \r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    if (!response.ok) throw new Error(\"Failed to delete CBO\");\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error deleting CBO:\", error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}