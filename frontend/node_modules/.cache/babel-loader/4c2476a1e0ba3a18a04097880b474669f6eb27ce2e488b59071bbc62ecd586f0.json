{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  errors\n}) => {\n  const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\n\n  const handleFileChange = (e, field) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!allowedTypes.includes(file.type)) {\n      alert(\"Only PDF, JPG, and PNG files are allowed.\");\n      return;\n    }\n    if (file.size > maxFileSize) {\n      alert(\"File size must be less than 5MB.\");\n      return;\n    }\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          file,\n          previewURL: URL.createObjectURL(file)\n        }\n      }\n    }));\n  };\n  const removeFile = field => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          file: null,\n          previewURL: null\n        }\n      }\n    }));\n  };\n  const getInputType = subField => {\n    const typeMapping = {\n      dateOfIssuance: \"date\",\n      dateOfValidity: \"date\",\n      year: \"number\",\n      registryNo: \"number\"\n    };\n    return typeMapping[subField] || \"text\"; // Default to text\n  };\n  const handleInputChange = (e, field, subField) => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          [subField]: e.target.value\n        }\n      }\n    }));\n  };\n  const sections = {\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\n    \"Additional Registrations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\", \"philGeps\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 4: Legal Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), Object.keys(sections).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-table\",\n        children: sections[section].map(field => {\n          var _formData$files$field, _formData$files$field2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-title-row\",\n              children: field.replace(/([A-Z])/g, \" $1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf,.jpg,.jpeg,.png\",\n                  onChange: e => handleFileChange(e, field),\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), ((_formData$files$field = formData.files[field]) === null || _formData$files$field === void 0 ? void 0 : _formData$files$field.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    href: formData.files[field].previewURL,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"Preview File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeFile(field),\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), ((_formData$files$field2 = formData.files[field]) === null || _formData$files$field2 === void 0 ? void 0 : _formData$files$field2.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: Object.keys(formData.files[field]).map(subField => {\n                  if (subField === \"file\" || subField === \"previewURL\") return null;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"subfield-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"subfield-label\",\n                      children: subField.replace(/([A-Z])/g, \" $1\").trim()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: getInputType(subField),\n                      className: \"subfield-input\",\n                      value: formData.files[field][subField] || \"\",\n                      onChange: e => handleInputChange(e, field, subField)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 29\n                    }, this)]\n                  }, subField, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), errors[field] && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-text\",\n                children: errors[field]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["FileUploadStep","formData","setFormData","errors","allowedTypes","maxFileSize","handleFileChange","e","field","file","target","files","includes","type","alert","size","prevData","previewURL","URL","createObjectURL","removeFile","getInputType","subField","typeMapping","dateOfIssuance","dateOfValidity","year","registryNo","handleInputChange","value","sections","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","section","_formData$files$field","_formData$files$field2","replace","accept","onChange","href","rel","onClick","trim","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["const FileUploadStep = ({ formData, setFormData, errors }) => {\r\n\r\n  const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\r\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\r\n\r\n  const handleFileChange = (e, field) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!allowedTypes.includes(file.type)) {\r\n      alert(\"Only PDF, JPG, and PNG files are allowed.\");\r\n      return;\r\n    }\r\n\r\n    if (file.size > maxFileSize) {\r\n      alert(\"File size must be less than 5MB.\");\r\n      return;\r\n    }\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], file, previewURL: URL.createObjectURL(file) },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const removeFile = (field) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], file: null, previewURL: null },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const getInputType = (subField) => {\r\n    const typeMapping = {\r\n      dateOfIssuance: \"date\",\r\n      dateOfValidity: \"date\",\r\n      year: \"number\",\r\n      registryNo: \"number\",\r\n    };\r\n    return typeMapping[subField] || \"text\"; // Default to text\r\n  };\r\n\r\n  const handleInputChange = (e, field, subField) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], [subField]: e.target.value },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const sections = {\r\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\r\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\r\n    \"Additional Registrations\": [\r\n      \"businessPermit\", \"ffeDis\", \"birRegistration\", \"philGeps\", \"rsbsa\",\r\n      \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\",\r\n      \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\", \"slpa\"\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2>Step 4: Legal Documents</h2>\r\n      {Object.keys(sections).map((section) => (\r\n        <div key={section} className=\"form-section\">\r\n          <h3 className=\"section-title\">{section}</h3>\r\n          <div className=\"form-table\">\r\n            {sections[section].map((field) => (\r\n              <div key={field} className=\"form-row\">\r\n                <div className=\"form-title-row\">{field.replace(/([A-Z])/g, \" $1\")}</div>\r\n                <div className=\"form-inputs\">\r\n                  <div className=\"file-upload-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.jpg,.jpeg,.png\"\r\n                      onChange={(e) => handleFileChange(e, field)}\r\n                      className=\"file-input\"\r\n                    />\r\n                    {formData.files[field]?.file && (\r\n                      <div className=\"file-actions\">\r\n                        <a href={formData.files[field].previewURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          Preview File\r\n                        </a>\r\n                        <button type=\"button\" onClick={() => removeFile(field)}>❌</button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {formData.files[field]?.file && (\r\n                    <div className=\"form-field\">\r\n                      {Object.keys(formData.files[field]).map((subField) => {\r\n                        if (subField === \"file\" || subField === \"previewURL\") return null;\r\n\r\n                        return (\r\n                          <div key={subField} className=\"subfield-container\">\r\n                            <label className=\"subfield-label\">\r\n                              {subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                            </label>\r\n                            <input\r\n                              type={getInputType(subField)}\r\n                              className=\"subfield-input\"\r\n                              value={formData.files[field][subField] || \"\"}\r\n                              onChange={(e) => handleInputChange(e, field, subField)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n\r\n                  {errors[field] && <p className=\"error-text\">{errors[field]}</p>}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}