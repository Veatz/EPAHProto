{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  errors\n}) => {\n  const handleFileChange = (e, field) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFormData(prevData => ({\n        ...prevData,\n        files: {\n          ...prevData.files,\n          [field]: {\n            ...prevData.files[field],\n            file\n          }\n        }\n      }));\n    }\n  };\n  const handleInputChange = (e, field, subField) => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          [subField]: e.target.value\n        }\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Step 4: File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-grid\",\n      children: Object.keys(formData.files).map(field => {\n        var _formData$files$field;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"main-label\",\n            children: field.replace(/([A-Z])/g, \" $1\").trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf,.jpg,.jpeg,.png\",\n            onChange: e => handleFileChange(e, field),\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), ((_formData$files$field = formData.files[field]) === null || _formData$files$field === void 0 ? void 0 : _formData$files$field.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subfields\",\n            children: Object.keys(formData.files[field]).map(subField => subField !== \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subfield-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"subfield-label\",\n                children: subField.replace(/([A-Z])/g, \" $1\").trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-field subfield-input\",\n                placeholder: subField.replace(/([A-Z])/g, \" $1\").trim(),\n                value: formData.files[field][subField],\n                onChange: e => handleInputChange(e, field, subField)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this)]\n            }, subField, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FileUploadStep","formData","setFormData","errors","handleFileChange","e","field","file","target","files","prevData","handleInputChange","subField","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_formData$files$field","replace","trim","type","accept","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst FileUploadStep = ({ formData, setFormData, errors }) => {\r\n  const handleFileChange = (e, field) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        files: {\r\n          ...prevData.files,\r\n          [field]: { ...prevData.files[field], file },\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, field, subField) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], [subField]: e.target.value },\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2 className=\"form-title\">Step 4: File Upload</h2>\r\n      <div className=\"file-upload-grid\">\r\n        {Object.keys(formData.files).map((field) => (\r\n          <div key={field} className=\"form-field\">\r\n            <label className=\"main-label\">{field.replace(/([A-Z])/g, \" $1\").trim()}</label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".pdf,.jpg,.jpeg,.png\"\r\n              onChange={(e) => handleFileChange(e, field)}\r\n              className=\"file-input\"\r\n            />\r\n            {formData.files[field]?.file && (\r\n              <div className=\"subfields\">\r\n                {Object.keys(formData.files[field]).map(\r\n                  (subField) =>\r\n                    subField !== \"file\" && (\r\n                      <div key={subField} className=\"subfield-container\">\r\n                        <label className=\"subfield-label\">\r\n                          {subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-field subfield-input\"\r\n                          placeholder={subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                          value={formData.files[field][subField]}\r\n                          onChange={(e) => handleInputChange(e, field, subField)}\r\n                        />\r\n                      </div>\r\n                    )\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}