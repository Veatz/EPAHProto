{"ast":null,"code":"export const registerCBO = async formData => {\n  try {\n    console.log(\"Sending API request with:\", formData); // Log request payload\n\n    // Prepare the form data to be sent (if you're also uploading files)\n    const data = new FormData();\n\n    // Add form data fields (for instance, if there are fields in formData object)\n    for (let key in formData) {\n      data.append(key, formData[key]);\n    }\n    const response = await fetch(\"http://localhost:4000/api/cbos\", {\n      method: \"POST\",\n      body: data // Directly send the formData object\n    });\n    if (!response.ok) {\n      const errorText = await response.text(); // Capture backend error response\n      console.error(\"API Response Error:\", response.status, errorText);\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\n    }\n    const responseData = await response.json();\n    console.log(\"API Response Data:\", responseData); // Log successful response\n    return responseData;\n  } catch (error) {\n    console.error(\"Error in API call:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["registerCBO","formData","console","log","data","FormData","key","append","response","fetch","method","body","ok","errorText","text","error","status","Error","responseData","json"],"sources":["C:/Users/ASUS/Desktop/prototype/frontend/src/utils/api.js"],"sourcesContent":["export const registerCBO = async (formData) => {\r\n  try {\r\n    console.log(\"Sending API request with:\", formData); // Log request payload\r\n\r\n    // Prepare the form data to be sent (if you're also uploading files)\r\n    const data = new FormData();\r\n\r\n    // Add form data fields (for instance, if there are fields in formData object)\r\n    for (let key in formData) {\r\n      data.append(key, formData[key]);\r\n    }\r\n\r\n    const response = await fetch(\"http://localhost:4000/api/cbos\", {\r\n      method: \"POST\",\r\n      body: data,  // Directly send the formData object\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text(); // Capture backend error response\r\n      console.error(\"API Response Error:\", response.status, errorText);\r\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\r\n    }\r\n\r\n    const responseData = await response.json();\r\n    console.log(\"API Response Data:\", responseData); // Log successful response\r\n    return responseData;\r\n  } catch (error) {\r\n    console.error(\"Error in API call:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAAC,CAAC,CAAC;;IAEpD;IACA,MAAMG,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE3B;IACA,KAAK,IAAIC,GAAG,IAAIL,QAAQ,EAAE;MACxBG,IAAI,CAACG,MAAM,CAACD,GAAG,EAAEL,QAAQ,CAACK,GAAG,CAAC,CAAC;IACjC;IAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP,IAAI,CAAG;IACf,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;MACzCZ,OAAO,CAACa,KAAK,CAAC,qBAAqB,EAAEP,QAAQ,CAACQ,MAAM,EAAEH,SAAS,CAAC;MAChE,MAAM,IAAII,KAAK,CAAC,2BAA2BT,QAAQ,CAACQ,MAAM,MAAMH,SAAS,EAAE,CAAC;IAC9E;IAEA,MAAMK,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC1CjB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEe,YAAY,CAAC,CAAC,CAAC;IACjD,OAAOA,YAAY;EACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}