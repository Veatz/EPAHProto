{"ast":null,"code":"export const registerCBO = async formData => {\n  try {\n    console.log(\"Sending API request with:\", JSON.stringify(formData, null, 2)); // Log request payload\n\n    const response = await fetch(\"http://localhost:4000/api/cbo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text(); // Capture backend error response\n      console.error(\"API Response Error:\", response.status, errorText);\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\n    }\n    const data = await response.json();\n    console.log(\"API Response Data:\", data); // Log successful response\n    return data;\n  } catch (error) {\n    console.error(\"Error in API call:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["registerCBO","formData","console","log","JSON","stringify","response","fetch","method","headers","body","ok","errorText","text","error","status","Error","data","json"],"sources":["C:/Users/ASUS/Desktop/prototype/frontend/src/utils/api.js"],"sourcesContent":["export const registerCBO = async (formData) => {\r\n  try {\r\n    console.log(\"Sending API request with:\", JSON.stringify(formData, null, 2)); // Log request payload\r\n\r\n    const response = await fetch(\"http://localhost:4000/api/cbo\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text(); // Capture backend error response\r\n      console.error(\"API Response Error:\", response.status, errorText);\r\n      throw new Error(`Failed to register CBO: ${response.status} - ${errorText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"API Response Data:\", data); // Log successful response\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error in API call:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE7E,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEN,IAAI,CAACC,SAAS,CAACJ,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;MACzCX,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAER,QAAQ,CAACS,MAAM,EAAEH,SAAS,CAAC;MAChE,MAAM,IAAII,KAAK,CAAC,2BAA2BV,QAAQ,CAACS,MAAM,MAAMH,SAAS,EAAE,CAAC;IAC9E;IAEA,MAAMK,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClChB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEc,IAAI,CAAC,CAAC,CAAC;IACzC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}