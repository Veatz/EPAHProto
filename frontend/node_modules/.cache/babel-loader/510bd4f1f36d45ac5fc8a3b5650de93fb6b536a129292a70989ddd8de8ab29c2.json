{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  errors\n}) => {\n  const handleFileChange = (e, fileType) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Validate file type\n      const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\n      if (!allowedTypes.includes(file.type)) {\n        alert(\"Invalid file type. Please upload a PDF, JPEG, or PNG file.\");\n        return;\n      }\n\n      // Validate file size (5MB limit)\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        alert(\"File size exceeds the limit of 5MB.\");\n        return;\n      }\n\n      // Update formData with the selected file\n      setFormData({\n        ...formData,\n        files: {\n          ...formData.files,\n          [fileType]: file\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 4: File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"RCT Resolution (PDF, JPEG, PNG)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.jpg,.jpeg,.png\",\n        onChange: e => handleFileChange(e, \"rctResolution\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), errors.rctResolution && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.rctResolution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Business Permit (PDF, JPEG, PNG)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.jpg,.jpeg,.png\",\n        onChange: e => handleFileChange(e, \"businessPermit\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), errors.businessPermit && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.businessPermit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"DOLE Certificate (PDF, JPEG, PNG)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.jpg,.jpeg,.png\",\n        onChange: e => handleFileChange(e, \"doleCertificate\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), errors.doleCertificate && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.doleCertificate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FileUploadStep","formData","setFormData","errors","handleFileChange","e","fileType","file","target","files","allowedTypes","includes","type","alert","maxSize","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","required","rctResolution","businessPermit","doleCertificate","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst FileUploadStep = ({ formData, setFormData, errors }) => {\r\n  const handleFileChange = (e, fileType) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validate file type\r\n      const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\r\n      if (!allowedTypes.includes(file.type)) {\r\n        alert(\"Invalid file type. Please upload a PDF, JPEG, or PNG file.\");\r\n        return;\r\n      }\r\n\r\n      // Validate file size (5MB limit)\r\n      const maxSize = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > maxSize) {\r\n        alert(\"File size exceeds the limit of 5MB.\");\r\n        return;\r\n      }\r\n\r\n      // Update formData with the selected file\r\n      setFormData({\r\n        ...formData,\r\n        files: {\r\n          ...formData.files,\r\n          [fileType]: file,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2>Step 4: File Upload</h2>\r\n\r\n      <div className=\"form-field\">\r\n        <label>RCT Resolution (PDF, JPEG, PNG)</label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.jpg,.jpeg,.png\"\r\n          onChange={(e) => handleFileChange(e, \"rctResolution\")}\r\n          required\r\n        />\r\n        {errors.rctResolution && <span className=\"error\">{errors.rctResolution}</span>}\r\n      </div>\r\n\r\n      <div className=\"form-field\">\r\n        <label>Business Permit (PDF, JPEG, PNG)</label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.jpg,.jpeg,.png\"\r\n          onChange={(e) => handleFileChange(e, \"businessPermit\")}\r\n          required\r\n        />\r\n        {errors.businessPermit && <span className=\"error\">{errors.businessPermit}</span>}\r\n      </div>\r\n\r\n      <div className=\"form-field\">\r\n        <label>DOLE Certificate (PDF, JPEG, PNG)</label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.jpg,.jpeg,.png\"\r\n          onChange={(e) => handleFileChange(e, \"doleCertificate\")}\r\n          required\r\n        />\r\n        {errors.doleCertificate && <span className=\"error\">{errors.doleCertificate}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}