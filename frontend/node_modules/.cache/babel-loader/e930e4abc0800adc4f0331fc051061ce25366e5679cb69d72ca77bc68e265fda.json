{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\EPAHProto\\\\frontend\\\\src\\\\components\\\\registrationSteps\\\\FileUploadStep.js\";\nimport React from \"react\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadStep = ({\n  formData,\n  setFormData,\n  errors\n}) => {\n  const handleFileChange = (e, field) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFormData(prevData => ({\n        ...prevData,\n        files: {\n          ...prevData.files,\n          [field]: {\n            ...prevData.files[field],\n            file\n          }\n        }\n      }));\n    }\n  };\n  const handleInputChange = (e, field, subField) => {\n    setFormData(prevData => ({\n      ...prevData,\n      files: {\n        ...prevData.files,\n        [field]: {\n          ...prevData.files[field],\n          [subField]: e.target.value\n        }\n      }\n    }));\n  };\n  const handleRemoveFile = field => {\n    setFormData(prevData => {\n      const updatedFiles = {\n        ...prevData.files\n      };\n      updatedFiles[field] = null; // Remove the file and collapse subfields\n      return {\n        ...prevData,\n        files: updatedFiles\n      };\n    });\n  };\n  const sections = {\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\n    \"Additional Registration/Accreditations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\"]\n  };\n  const labels = {\n    rctResolution: \"RCT Resolution\",\n    dti: \"DTI Registration\",\n    sec: \"SEC Registration\",\n    cda: \"CDA Registration\",\n    csoNpoNgoPo: \"CSO/NPO/NGO/PO Registration\",\n    doleRule1020: \"DOLE Rule 1020 Registration\",\n    bankBook: \"Bank Book\",\n    auditedFinancialStatement: \"Audited Financial Statement\",\n    latestITR: \"Latest ITR\",\n    salesInvoice: \"Sales Invoice\",\n    businessPermit: \"Business Permit\",\n    ffeDis: \"FFEDIS Registration\",\n    birRegistration: \"BIR Registration\",\n    rsbsa: \"RSBSA Registration\",\n    fishAr: \"FISH-AR Registration\",\n    fda: \"FDA Registration\",\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries\",\n    farmersAssociation: \"Farmer's Association\",\n    irrigatorsAssociation: \"Irrigators Association\",\n    laborUnionsWorkersAssoc: \"Labor Unions and Workers' Association\"\n  };\n  const subFieldLabels = {\n    territorialScope: \"Territorial Scope\",\n    dateOfIssuance: \"Date of Issuance\",\n    dateOfValidity: \"Date of Validity\",\n    typeOfRegistration: \"Type of Registration\",\n    registryNo: \"Registry Number\",\n    typeOfCooperative: \"Type of Cooperative\",\n    agencyIssuer: \"Agency Issuer\",\n    year: \"Year\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Step 4: File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), Object.keys(sections).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-table\",\n        children: sections[section].map(field => {\n          var _formData$files$field, _formData$files$field2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row file-upload-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-title-row\",\n              children: labels[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-input-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf,.jpg,.jpeg,.png\",\n                  onChange: e => handleFileChange(e, field),\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), ((_formData$files$field = formData.files[field]) === null || _formData$files$field === void 0 ? void 0 : _formData$files$field.file) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-file-button\",\n                  onClick: () => handleRemoveFile(field),\n                  children: \"\\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), ((_formData$files$field2 = formData.files[field]) === null || _formData$files$field2 === void 0 ? void 0 : _formData$files$field2.file) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subfields-vertical\",\n                children: Object.keys(formData.files[field]).map(subField => subField !== \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subfield-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"subfield-label\",\n                    children: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"subfield-input\",\n                    placeholder: subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim(),\n                    value: formData.files[field][subField],\n                    onChange: e => handleInputChange(e, field, subField)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 31\n                  }, this)]\n                }, subField, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploadStep;\nexport default FileUploadStep;\nvar _c;\n$RefreshReg$(_c, \"FileUploadStep\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FileUploadStep","formData","setFormData","errors","handleFileChange","e","field","file","target","files","prevData","handleInputChange","subField","value","handleRemoveFile","updatedFiles","sections","labels","rctResolution","dti","sec","cda","csoNpoNgoPo","doleRule1020","bankBook","auditedFinancialStatement","latestITR","salesInvoice","businessPermit","ffeDis","birRegistration","rsbsa","fishAr","fda","agrarianReformBeneficiaries","farmersAssociation","irrigatorsAssociation","laborUnionsWorkersAssoc","subFieldLabels","territorialScope","dateOfIssuance","dateOfValidity","typeOfRegistration","registryNo","typeOfCooperative","agencyIssuer","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","section","_formData$files$field","_formData$files$field2","type","accept","onChange","onClick","replace","trim","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/EPAHProto/frontend/src/components/registrationSteps/FileUploadStep.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../index.css\";\r\n\r\nconst FileUploadStep = ({ formData, setFormData, errors }) => {\r\n  const handleFileChange = (e, field) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        files: {\r\n          ...prevData.files,\r\n          [field]: { ...prevData.files[field], file },\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e, field, subField) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      files: {\r\n        ...prevData.files,\r\n        [field]: { ...prevData.files[field], [subField]: e.target.value },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleRemoveFile = (field) => {\r\n    setFormData((prevData) => {\r\n      const updatedFiles = { ...prevData.files };\r\n      updatedFiles[field] = null; // Remove the file and collapse subfields\r\n      return { ...prevData, files: updatedFiles };\r\n    });\r\n  };\r\n\r\n  const sections = {\r\n    \"Legal Requirements\": [\"rctResolution\", \"dti\", \"sec\", \"cda\", \"csoNpoNgoPo\", \"doleRule1020\"],\r\n    \"Financial Requirements\": [\"bankBook\", \"auditedFinancialStatement\", \"latestITR\", \"salesInvoice\"],\r\n    \"Additional Registration/Accreditations\": [\"businessPermit\", \"ffeDis\", \"birRegistration\", \"rsbsa\", \"fishAr\", \"fda\", \"agrarianReformBeneficiaries\", \"farmersAssociation\", \"irrigatorsAssociation\", \"laborUnionsWorkersAssoc\"],\r\n  };\r\n\r\n  const labels = {\r\n    rctResolution: \"RCT Resolution\",\r\n    dti: \"DTI Registration\",\r\n    sec: \"SEC Registration\",\r\n    cda: \"CDA Registration\",\r\n    csoNpoNgoPo: \"CSO/NPO/NGO/PO Registration\",\r\n    doleRule1020: \"DOLE Rule 1020 Registration\",\r\n    bankBook: \"Bank Book\",\r\n    auditedFinancialStatement: \"Audited Financial Statement\",\r\n    latestITR: \"Latest ITR\",\r\n    salesInvoice: \"Sales Invoice\",\r\n    businessPermit: \"Business Permit\",\r\n    ffeDis: \"FFEDIS Registration\",\r\n    birRegistration: \"BIR Registration\",\r\n    rsbsa: \"RSBSA Registration\",\r\n    fishAr: \"FISH-AR Registration\",\r\n    fda: \"FDA Registration\",\r\n    agrarianReformBeneficiaries: \"Agrarian Reform Beneficiaries\",\r\n    farmersAssociation: \"Farmer's Association\",\r\n    irrigatorsAssociation: \"Irrigators Association\",\r\n    laborUnionsWorkersAssoc: \"Labor Unions and Workers' Association\",\r\n  };\r\n\r\n  const subFieldLabels = {\r\n    territorialScope: \"Territorial Scope\",\r\n    dateOfIssuance: \"Date of Issuance\",\r\n    dateOfValidity: \"Date of Validity\",\r\n    typeOfRegistration: \"Type of Registration\",\r\n    registryNo: \"Registry Number\",\r\n    typeOfCooperative: \"Type of Cooperative\",\r\n    agencyIssuer: \"Agency Issuer\",\r\n    year: \"Year\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <h2 className=\"form-title\">Step 4: File Upload</h2>\r\n      {Object.keys(sections).map((section) => (\r\n        <div key={section} className=\"form-section\">\r\n          <h3 className=\"section-title\">{section}</h3>\r\n          <div className=\"form-table\">\r\n            {sections[section].map((field) => (\r\n              <div key={field} className=\"form-row file-upload-container\">\r\n                <div className=\"form-title-row\">{labels[field]}</div>\r\n                <div className=\"form-inputs\">\r\n                  <div className=\"file-input-wrapper\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.jpg,.jpeg,.png\"\r\n                      onChange={(e) => handleFileChange(e, field)}\r\n                      className=\"file-input\"\r\n                    />\r\n                    {formData.files[field]?.file && (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"remove-file-button\"\r\n                        onClick={() => handleRemoveFile(field)}\r\n                      >\r\n                        ✖\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  {formData.files[field]?.file && (\r\n                    <div className=\"subfields-vertical\">\r\n                      {Object.keys(formData.files[field]).map(\r\n                        (subField) =>\r\n                          subField !== \"file\" && (\r\n                            <div key={subField} className=\"subfield-container\">\r\n                              <label className=\"subfield-label\">\r\n                                {subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"subfield-input\"\r\n                                placeholder={subFieldLabels[subField] || subField.replace(/([A-Z])/g, \" $1\").trim()}\r\n                                value={formData.files[field][subField]}\r\n                                onChange={(e) => handleInputChange(e, field, subField)}\r\n                              />\r\n                            </div>\r\n                          )\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}